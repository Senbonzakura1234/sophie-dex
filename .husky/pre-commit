#!/bin/bash
git add .

# Color definitions for better readability
RESET='\033[0m'
BOLD='\033[1m'
GREEN='\033[32m'
RED='\033[31m'
YELLOW='\033[33m'
BLUE='\033[34m'

echo -e "${BLUE}⚙ Starting pre-commit script...${RESET}"

# Function to update the README if there are staged changes
update_readme() {
	README_FILE="src/app/_components/common/dynamic/Readme/README.mdx"

	if git diff --cached --name-only | grep "$README_FILE" >/dev/null; then
		echo -e "${GREEN}✔ Staged changes found in $README_FILE${RESET}"
		npm run generate-README
		npm run prettier-README
	else
		echo -e "${YELLOW}✖ No changes in $README_FILE${RESET}"
	fi
}

# Function to display version increment options and capture user input
select_version_increment() {
	echo -e "${BLUE}${BOLD}Select the version increment type:${RESET}"
	select increment_type in \
		"🔧 patch" \
		"🌿 minor" \
		"🚀 major" \
		"❌ skip"; do
		case $increment_type in
		"🔧 patch")
			increment_type="patch"
			echo -e "${GREEN}✔ You selected: 🔧 ${YELLOW}patch${RESET}"
			return 0
			;;
		"🌿 minor")
			increment_type="minor"
			echo -e "${GREEN}✔ You selected: 🌿 ${BLUE}minor${RESET}"
			return 0
			;;
		"🚀 major")
			increment_type="major"
			echo -e "${GREEN}✔ You selected: 🚀 ${GREEN}major${RESET}"
			return 0
			;;
		"❌ skip")
			increment_type="skip"
			echo -e "${YELLOW}⚠ Skipping version change.${RESET}"
			return 0
			;;
		*)
			echo -e "${YELLOW}⚠ Invalid option. Defaulting to skip.${RESET}"
			increment_type="skip" # Set default value
			return 0              # Exit the select loop
			;;
		esac
	done </dev/tty
}

# Run the README update check
update_readme

# Check for any staged changes in the repository
if git diff --cached --quiet; then
	echo -e "${RED}✖ No changes in the repository${RESET}"
	exit 1
else
	# Prompt the user to select a version increment type
	select_version_increment

	# Skip version change if "skip" is selected
	if [[ "$increment_type" == "skip" ]]; then
		echo -e "${GREEN}✔ Skipping version change.${RESET}"
	else
		# Run the version change script using npm
		echo -e "${BLUE}⚙ Running version change script...${RESET}"
		new_version=$(npm run change-version -- "$increment_type")

		# Check if the script ran successfully
		if [[ $? -ne 0 ]]; then
			echo -e "${RED}✖ Failed to update package.json. Aborting commit.${RESET}"
			exit 1
		fi

		# Run prettier on package.json after version change
		echo -e "${BLUE}⚙ Running prettier-package-json...${RESET}"
		npm run prettier-package-json
		npm i

		# Output the new version
		echo -e "${GREEN}✔ Version updated to $new_version successfully.${RESET}"
	fi

	# Stage all changes, including package-lock.json
	echo -e "${BLUE}⚙ Staging all changes...${RESET}"
	git add .

	echo -e "${GREEN}✔ Proceeding with commit.${RESET}"
fi
